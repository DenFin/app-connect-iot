image: node:18

stages:
  - analyse
  - test
  - deploy

eslint:
  stage: analyse
  tags:
    - bega-runner
  before_script:
    - curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm@7
    - pnpm config set store-dir .pnpm-store
    - pnpm config set -- '//gitlab.com/api/v4/projects/38422864/packages/npm/:_authToken' "${CI_JOB_TOKEN}"
    - pnpm install
  script:
    - pnpm lint

vitest:
  stage: test
  tags:
    - bega-runner
  before_script:
    - curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm@7
    - pnpm config set store-dir .pnpm-store
    - pnpm config set -- '//gitlab.com/api/v4/projects/38422864/packages/npm/:_authToken' "${CI_JOB_TOKEN}"
    - pnpm install
  script:
    - pnpm test
  coverage: '/^(?:Lines)\s*:\s*([^%]+)/'
  artifacts:
    when: always
    expire_in: 1 day
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage/cobertura-coverage.xml

.e2e-tests-template: &e2e_tests
  stage: test
  tags:
    - bega-runner
  image: cypress/browsers:node18.12.0-chrome103-ff107
  before_script:
    - curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm@7
    - pnpm config set store-dir .pnpm-store
    - pnpm config set -- '//gitlab.com/api/v4/projects/38422864/packages/npm/:_authToken' "${CI_JOB_TOKEN}"
    - pnpm install
  allow_failure: true

e2e-tests-auto-chrome:
  <<: *e2e_tests
  script:
    - pnpm cy:run:ci:chrome
  only:
    - develop
    - main

e2e-tests-auto-chrome-mobile:
  <<: *e2e_tests
  script:
    - pnpm cy:run:ci:chrome:mobile
  only:
    - develop
    - main

e2e-tests-auto-firefox:
  <<: *e2e_tests
  script:
    - pnpm cy:run:ci:firefox
  only:
    - develop
    - main

e2e-tests-auto-firefox-mobile:
  <<: *e2e_tests
  script:
    - pnpm cy:run:ci:firefox:mobile
  only:
    - develop
    - main

e2e-tests-manual-chrome:
  <<: *e2e_tests
  script:
    - pnpm cy:run:ci:chrome
  except:
    - develop
    - main
  when: manual

e2e-tests-manual-chrome-mobile:
  <<: *e2e_tests
  script:
    - pnpm cy:run:ci:chrome:mobile
  except:
    - develop
    - main
  when: manual

e2e-tests-manual-firefox:
  <<: *e2e_tests
  script:
    - pnpm cy:run:ci:firefox
  except:
    - develop
    - main
  when: manual

e2e-tests-manual-firefox-mobile:
  <<: *e2e_tests
  script:
    - pnpm cy:run:ci:firefox:mobile
  except:
    - develop
    - main
  when: manual

e2e-tests-manual-safari:
  <<: *e2e_tests
  before_script:
    - curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm@7
    - pnpm config set store-dir .pnpm-store
    - pnpm config set -- '//gitlab.com/api/v4/projects/38422864/packages/npm/:_authToken' "${CI_JOB_TOKEN}"
    - pnpm install
    - npx playwright install-deps
  script:
    - pnpm cy:run:ci:safari
  except:
    - develop
    - main
  when: manual

e2e-tests-manual-safari-mobile:
  <<: *e2e_tests
  before_script:
    - curl -f https://get.pnpm.io/v6.16.js | node - add --global pnpm@7
    - pnpm config set store-dir .pnpm-store
    - pnpm config set -- '//gitlab.com/api/v4/projects/38422864/packages/npm/:_authToken' "${CI_JOB_TOKEN}"
    - pnpm install
    - npx playwright install-deps
  script:
    - pnpm cy:run:ci:safari:mobile
  except:
    - develop
    - main
  when: manual

deploy-to-azure-dev:
  stage: deploy
  image: docker:stable
  tags:
    - docker
  services:
    - name: docker:dind
      alias: thedockerhost
  variables:
    DOCKER_HOST: tcp://thedockerhost:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ''
  before_script:
    - docker login -u "$AZURE_REGISTRY_USER" -p "$AZURE_REGISTRY_PASSWORD" $AZURE_REGISTRY
  script:
    - docker build --build-arg BASE_URL=${BASE_URL} --build-arg BEGA_ID_ENDPOINT_BASE=${BEGA_ID_ENDPOINT_BASE} --build-arg CONNECT_IOT_API_BASE=${CONNECT_IOT_API_BASE} --build-arg NEXTAUTH_JWT_SECRET=${NEXTAUTH_JWT_SECRET} --build-arg NPM_TOKEN=${NPM_TOKEN} --pull -t "$AZURE_REGISTRY/begaconnect:develop" .
    - docker push "$AZURE_REGISTRY/begaconnect:develop"

deploy-to-azure-stage:
  stage: deploy
  image: docker:stable
  tags:
    - docker
  services:
    - name: docker:dind
      alias: thedockerhost
  variables:
    DOCKER_HOST: tcp://thedockerhost:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ''
  before_script:
    - docker login -u "$AZURE_REGISTRY_USER" -p "$AZURE_REGISTRY_PASSWORD" $AZURE_REGISTRY
  script:
    - docker build --build-arg BASE_URL=${BASE_URL} --build-arg BEGA_ID_ENDPOINT_BASE=${BEGA_ID_ENDPOINT_BASE} --build-arg CONNECT_IOT_API_BASE=${CONNECT_IOT_API_BASE} --build-arg NEXTAUTH_JWT_SECRET=${NEXTAUTH_JWT_SECRET} --build-arg NPM_TOKEN=${NPM_TOKEN} --pull -t "$AZURE_REGISTRY/begaconnect:stage" .
    - docker push "$AZURE_REGISTRY/begaconnect:stage"

deploy-to-azure-prod:
  stage: deploy
  image: docker:stable
  tags:
    - docker
  services:
    - name: docker:dind
      alias: thedockerhost
  variables:
    DOCKER_HOST: tcp://thedockerhost:2375/
    DOCKER_DRIVER: overlay2
    DOCKER_TLS_CERTDIR: ''
  before_script:
    - docker login -u "$AZURE_REGISTRY_USER" -p "$AZURE_REGISTRY_PASSWORD" $AZURE_REGISTRY
  script:
    - docker build --build-arg BASE_URL=${BASE_URL} --build-arg BEGA_ID_ENDPOINT_BASE=${BEGA_ID_ENDPOINT_BASE} --build-arg CONNECT_IOT_API_BASE=${CONNECT_IOT_API_BASE} --build-arg NEXTAUTH_JWT_SECRET=${NEXTAUTH_JWT_SECRET} --build-arg NPM_TOKEN=${NPM_TOKEN} --pull -t "$AZURE_REGISTRY/begaconnect:stable" .
    - docker push "$AZURE_REGISTRY/begaconnect:stable"
